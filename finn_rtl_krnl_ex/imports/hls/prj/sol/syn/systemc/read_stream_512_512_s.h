// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _read_stream_512_512_s_HH_
#define _read_stream_512_512_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct read_stream_512_512_s : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<512> > axis01_TDATA;
    sc_in< sc_logic > axis01_TVALID;
    sc_out< sc_logic > axis01_TREADY;
    sc_in< sc_lv<64> > axis01_TKEEP;
    sc_in< sc_lv<1> > axis01_TLAST;
    sc_out< sc_lv<512> > ap_return_0;
    sc_out< sc_lv<64> > ap_return_1;
    sc_out< sc_lv<1> > ap_return_2;
    sc_out< sc_logic > axis01_TDATA_blk_n;
    sc_in< sc_logic > ap_ce;


    // Module declarations
    read_stream_512_512_s(sc_module_name name);
    SC_HAS_PROCESS(read_stream_512_512_s);

    ~read_stream_512_512_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_state1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_block_state1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_2();
    void thread_axis01_TDATA_blk_n();
    void thread_axis01_TREADY();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
