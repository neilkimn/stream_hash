// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _example_stream_plus1_512_512_s_HH_
#define _example_stream_plus1_512_512_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "write_stream_512_512_s.h"
#include "read_stream_512_512_s.h"

namespace ap_rtl {

struct example_stream_plus1_512_512_s : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<512> > axis01_TDATA;
    sc_in< sc_logic > axis01_TVALID;
    sc_out< sc_logic > axis01_TREADY;
    sc_in< sc_lv<64> > axis01_TKEEP;
    sc_in< sc_lv<1> > axis01_TLAST;
    sc_out< sc_lv<512> > axis00_TDATA;
    sc_out< sc_logic > axis00_TVALID;
    sc_in< sc_logic > axis00_TREADY;
    sc_out< sc_lv<64> > axis00_TKEEP;
    sc_out< sc_lv<1> > axis00_TLAST;


    // Module declarations
    example_stream_plus1_512_512_s(sc_module_name name);
    SC_HAS_PROCESS(example_stream_plus1_512_512_s);

    ~example_stream_plus1_512_512_s();

    sc_trace_file* mVcdFile;

    write_stream_512_512_s* call_ln100_write_stream_512_512_s_fu_98;
    read_stream_512_512_s* call_ret_read_stream_512_512_s_fu_111;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > call_ret_read_stream_512_512_s_fu_111_axis01_TDATA_blk_n;
    sc_signal< sc_logic > axis01_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > call_ln100_write_stream_512_512_s_fu_98_axis00_TDATA_blk_n;
    sc_signal< sc_logic > axis00_TDATA_blk_n;
    sc_signal< sc_logic > call_ln100_write_stream_512_512_s_fu_98_ap_start;
    sc_signal< sc_logic > call_ln100_write_stream_512_512_s_fu_98_ap_done;
    sc_signal< sc_logic > call_ln100_write_stream_512_512_s_fu_98_ap_idle;
    sc_signal< sc_logic > call_ln100_write_stream_512_512_s_fu_98_ap_ready;
    sc_signal< sc_lv<512> > call_ln100_write_stream_512_512_s_fu_98_acc_data_V_read;
    sc_signal< sc_lv<512> > call_ln100_write_stream_512_512_s_fu_98_axis00_TDATA;
    sc_signal< sc_logic > call_ln100_write_stream_512_512_s_fu_98_axis00_TVALID;
    sc_signal< sc_logic > call_ln100_write_stream_512_512_s_fu_98_axis00_TREADY;
    sc_signal< sc_lv<64> > call_ln100_write_stream_512_512_s_fu_98_axis00_TKEEP;
    sc_signal< sc_lv<1> > call_ln100_write_stream_512_512_s_fu_98_axis00_TLAST;
    sc_signal< sc_logic > call_ln100_write_stream_512_512_s_fu_98_ap_ce;
    sc_signal< bool > ap_block_state3;
    sc_signal< sc_logic > call_ret_read_stream_512_512_s_fu_111_ap_start;
    sc_signal< sc_logic > call_ret_read_stream_512_512_s_fu_111_ap_done;
    sc_signal< sc_logic > call_ret_read_stream_512_512_s_fu_111_ap_idle;
    sc_signal< sc_logic > call_ret_read_stream_512_512_s_fu_111_ap_ready;
    sc_signal< sc_logic > call_ret_read_stream_512_512_s_fu_111_axis01_TREADY;
    sc_signal< sc_lv<512> > call_ret_read_stream_512_512_s_fu_111_ap_return_0;
    sc_signal< sc_lv<64> > call_ret_read_stream_512_512_s_fu_111_ap_return_1;
    sc_signal< sc_lv<1> > call_ret_read_stream_512_512_s_fu_111_ap_return_2;
    sc_signal< sc_logic > call_ret_read_stream_512_512_s_fu_111_ap_ce;
    sc_signal< sc_lv<1> > acc_last_V_fu_130_p1;
    sc_signal< sc_lv<32> > trunc_ln647_fu_135_p1;
    sc_signal< sc_lv<32> > p_Result_4_1_i_fu_145_p4;
    sc_signal< sc_lv<32> > p_Result_4_2_i_fu_161_p4;
    sc_signal< sc_lv<32> > p_Result_4_3_i_fu_177_p4;
    sc_signal< sc_lv<32> > p_Result_4_4_i_fu_193_p4;
    sc_signal< sc_lv<32> > p_Result_4_5_i_fu_209_p4;
    sc_signal< sc_lv<32> > p_Result_4_6_i_fu_225_p4;
    sc_signal< sc_lv<32> > p_Result_4_7_i_fu_241_p4;
    sc_signal< sc_lv<32> > p_Result_4_8_i_fu_257_p4;
    sc_signal< sc_lv<32> > p_Result_4_9_i_fu_273_p4;
    sc_signal< sc_lv<32> > p_Result_4_i_fu_289_p4;
    sc_signal< sc_lv<32> > p_Result_4_10_i_fu_305_p4;
    sc_signal< sc_lv<32> > p_Result_4_11_i_fu_321_p4;
    sc_signal< sc_lv<32> > p_Result_4_12_i_fu_337_p4;
    sc_signal< sc_lv<32> > p_Result_4_13_i_fu_353_p4;
    sc_signal< sc_lv<32> > p_Result_4_14_i_fu_369_p4;
    sc_signal< sc_lv<32> > add_ln215_15_fu_379_p2;
    sc_signal< sc_lv<32> > add_ln215_14_fu_363_p2;
    sc_signal< sc_lv<32> > add_ln215_13_fu_347_p2;
    sc_signal< sc_lv<32> > add_ln215_12_fu_331_p2;
    sc_signal< sc_lv<32> > add_ln215_11_fu_315_p2;
    sc_signal< sc_lv<32> > add_ln215_10_fu_299_p2;
    sc_signal< sc_lv<32> > add_ln215_9_fu_283_p2;
    sc_signal< sc_lv<32> > add_ln215_8_fu_267_p2;
    sc_signal< sc_lv<32> > add_ln215_7_fu_251_p2;
    sc_signal< sc_lv<32> > add_ln215_6_fu_235_p2;
    sc_signal< sc_lv<32> > add_ln215_5_fu_219_p2;
    sc_signal< sc_lv<32> > add_ln215_4_fu_203_p2;
    sc_signal< sc_lv<32> > add_ln215_3_fu_187_p2;
    sc_signal< sc_lv<32> > add_ln215_2_fu_171_p2;
    sc_signal< sc_lv<32> > add_ln215_1_fu_155_p2;
    sc_signal< sc_lv<32> > add_ln215_fu_139_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_state3;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<32> ap_const_lv32_5F;
    static const sc_lv<32> ap_const_lv32_60;
    static const sc_lv<32> ap_const_lv32_7F;
    static const sc_lv<32> ap_const_lv32_80;
    static const sc_lv<32> ap_const_lv32_9F;
    static const sc_lv<32> ap_const_lv32_A0;
    static const sc_lv<32> ap_const_lv32_BF;
    static const sc_lv<32> ap_const_lv32_C0;
    static const sc_lv<32> ap_const_lv32_DF;
    static const sc_lv<32> ap_const_lv32_E0;
    static const sc_lv<32> ap_const_lv32_FF;
    static const sc_lv<32> ap_const_lv32_100;
    static const sc_lv<32> ap_const_lv32_11F;
    static const sc_lv<32> ap_const_lv32_120;
    static const sc_lv<32> ap_const_lv32_13F;
    static const sc_lv<32> ap_const_lv32_140;
    static const sc_lv<32> ap_const_lv32_15F;
    static const sc_lv<32> ap_const_lv32_160;
    static const sc_lv<32> ap_const_lv32_17F;
    static const sc_lv<32> ap_const_lv32_180;
    static const sc_lv<32> ap_const_lv32_19F;
    static const sc_lv<32> ap_const_lv32_1A0;
    static const sc_lv<32> ap_const_lv32_1BF;
    static const sc_lv<32> ap_const_lv32_1C0;
    static const sc_lv<32> ap_const_lv32_1DF;
    static const sc_lv<32> ap_const_lv32_1E0;
    static const sc_lv<32> ap_const_lv32_1FF;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_acc_last_V_fu_130_p1();
    void thread_add_ln215_10_fu_299_p2();
    void thread_add_ln215_11_fu_315_p2();
    void thread_add_ln215_12_fu_331_p2();
    void thread_add_ln215_13_fu_347_p2();
    void thread_add_ln215_14_fu_363_p2();
    void thread_add_ln215_15_fu_379_p2();
    void thread_add_ln215_1_fu_155_p2();
    void thread_add_ln215_2_fu_171_p2();
    void thread_add_ln215_3_fu_187_p2();
    void thread_add_ln215_4_fu_203_p2();
    void thread_add_ln215_5_fu_219_p2();
    void thread_add_ln215_6_fu_235_p2();
    void thread_add_ln215_7_fu_251_p2();
    void thread_add_ln215_8_fu_267_p2();
    void thread_add_ln215_9_fu_283_p2();
    void thread_add_ln215_fu_139_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_state3();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_axis00_TDATA();
    void thread_axis00_TDATA_blk_n();
    void thread_axis00_TKEEP();
    void thread_axis00_TLAST();
    void thread_axis00_TVALID();
    void thread_axis01_TDATA_blk_n();
    void thread_axis01_TREADY();
    void thread_call_ln100_write_stream_512_512_s_fu_98_acc_data_V_read();
    void thread_call_ln100_write_stream_512_512_s_fu_98_ap_ce();
    void thread_call_ln100_write_stream_512_512_s_fu_98_ap_start();
    void thread_call_ln100_write_stream_512_512_s_fu_98_axis00_TREADY();
    void thread_call_ret_read_stream_512_512_s_fu_111_ap_ce();
    void thread_call_ret_read_stream_512_512_s_fu_111_ap_start();
    void thread_p_Result_4_10_i_fu_305_p4();
    void thread_p_Result_4_11_i_fu_321_p4();
    void thread_p_Result_4_12_i_fu_337_p4();
    void thread_p_Result_4_13_i_fu_353_p4();
    void thread_p_Result_4_14_i_fu_369_p4();
    void thread_p_Result_4_1_i_fu_145_p4();
    void thread_p_Result_4_2_i_fu_161_p4();
    void thread_p_Result_4_3_i_fu_177_p4();
    void thread_p_Result_4_4_i_fu_193_p4();
    void thread_p_Result_4_5_i_fu_209_p4();
    void thread_p_Result_4_6_i_fu_225_p4();
    void thread_p_Result_4_7_i_fu_241_p4();
    void thread_p_Result_4_8_i_fu_257_p4();
    void thread_p_Result_4_9_i_fu_273_p4();
    void thread_p_Result_4_i_fu_289_p4();
    void thread_trunc_ln647_fu_135_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
