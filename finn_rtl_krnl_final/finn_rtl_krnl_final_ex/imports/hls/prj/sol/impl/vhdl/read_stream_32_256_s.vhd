-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity read_stream_32_256_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    axis01_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    axis01_TVALID : IN STD_LOGIC;
    axis01_TREADY : OUT STD_LOGIC;
    axis01_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    axis01_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    acc_data_V_read : IN STD_LOGIC_VECTOR (255 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (255 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (0 downto 0);
    axis01_TDATA_blk_n : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC );
end;


architecture behav of read_stream_32_256_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_last_V_reg_386 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_last_V_1_reg_418 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_last_V_2_reg_449 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_last_V_3_reg_479 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_last_V_4_reg_508 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal tmp_last_V_5_reg_536 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_last_V_6_reg_560 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_data_V_reg_368 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal tmp_keep_V_reg_374 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_165_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_170_p5 : STD_LOGIC_VECTOR (255 downto 0);
    signal p_Result_s_reg_390 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal zext_ln414_fu_181_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_V_1_reg_401 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_keep_V_1_reg_407 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_1_fu_184_p5 : STD_LOGIC_VECTOR (255 downto 0);
    signal p_Result_1_reg_422 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_predicate_op26_read_state3 : BOOLEAN;
    signal ap_block_state3 : BOOLEAN;
    signal zext_ln414_1_fu_200_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_V_2_reg_433 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_keep_V_2_reg_439 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_s_10_fu_204_p5 : STD_LOGIC_VECTOR (255 downto 0);
    signal p_Result_s_10_reg_453 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_predicate_op34_read_state4 : BOOLEAN;
    signal ap_block_state4 : BOOLEAN;
    signal zext_ln414_2_fu_221_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_V_3_reg_464 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_keep_V_3_reg_470 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_3_fu_225_p5 : STD_LOGIC_VECTOR (255 downto 0);
    signal p_Result_3_reg_483 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_predicate_op42_read_state5 : BOOLEAN;
    signal ap_block_state5 : BOOLEAN;
    signal zext_ln414_3_fu_243_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_V_4_reg_494 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_keep_V_4_reg_500 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_4_fu_247_p5 : STD_LOGIC_VECTOR (255 downto 0);
    signal p_Result_4_reg_512 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_predicate_op50_read_state6 : BOOLEAN;
    signal ap_block_state6 : BOOLEAN;
    signal zext_ln414_4_fu_266_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_V_5_reg_523 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_keep_V_5_reg_529 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_5_fu_270_p5 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_predicate_op58_read_state7 : BOOLEAN;
    signal ap_block_state7 : BOOLEAN;
    signal zext_ln414_5_fu_290_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_V_6_reg_550 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_keep_V_6_reg_555 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_6_fu_294_p5 : STD_LOGIC_VECTOR (255 downto 0);
    signal zext_ln414_6_fu_318_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_acc_data_V_read : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_mux_acc_keep_V_1_phi_fu_89_p16 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_keep_V_1_reg_86 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_2_7_fu_336_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_predicate_op66_read_state8 : BOOLEAN;
    signal ap_block_state8 : BOOLEAN;
    signal ap_phi_mux_acc_data_V_1_phi_fu_110_p16 : STD_LOGIC_VECTOR (255 downto 0);
    signal acc_data_V_1_reg_107 : STD_LOGIC_VECTOR (255 downto 0);
    signal p_Result_7_fu_322_p9 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_mux_acc_last_V_write_assign_phi_fu_132_p16 : STD_LOGIC_VECTOR (0 downto 0);
    signal acc_last_V_write_assign_reg_128 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_194_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_fu_214_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_2_fu_235_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_fu_257_p6 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_4_fu_280_p7 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_5_fu_306_p8 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_condition_497 : BOOLEAN;
    signal ap_condition_502 : BOOLEAN;
    signal ap_condition_507 : BOOLEAN;
    signal ap_condition_512 : BOOLEAN;
    signal ap_condition_517 : BOOLEAN;
    signal ap_condition_522 : BOOLEAN;
    signal ap_condition_526 : BOOLEAN;
    signal ap_condition_530 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    acc_data_V_1_reg_107_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_530)) then 
                    acc_data_V_1_reg_107 <= p_Result_7_fu_322_p9;
                elsif ((ap_const_boolean_1 = ap_condition_526)) then 
                    acc_data_V_1_reg_107 <= p_Result_6_fu_294_p5;
                elsif ((ap_const_boolean_1 = ap_condition_522)) then 
                    acc_data_V_1_reg_107 <= p_Result_5_fu_270_p5;
                elsif ((ap_const_boolean_1 = ap_condition_517)) then 
                    acc_data_V_1_reg_107 <= p_Result_4_fu_247_p5;
                elsif ((ap_const_boolean_1 = ap_condition_512)) then 
                    acc_data_V_1_reg_107 <= p_Result_3_fu_225_p5;
                elsif ((ap_const_boolean_1 = ap_condition_507)) then 
                    acc_data_V_1_reg_107 <= p_Result_s_10_fu_204_p5;
                elsif ((ap_const_boolean_1 = ap_condition_502)) then 
                    acc_data_V_1_reg_107 <= p_Result_1_fu_184_p5;
                elsif ((ap_const_boolean_1 = ap_condition_497)) then 
                    acc_data_V_1_reg_107 <= p_Result_s_fu_170_p5;
                end if;
            end if; 
        end if;
    end process;

    acc_keep_V_1_reg_86_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_530)) then 
                    acc_keep_V_1_reg_86 <= p_Result_2_7_fu_336_p9;
                elsif ((ap_const_boolean_1 = ap_condition_526)) then 
                    acc_keep_V_1_reg_86 <= zext_ln414_6_fu_318_p1;
                elsif ((ap_const_boolean_1 = ap_condition_522)) then 
                    acc_keep_V_1_reg_86 <= zext_ln414_5_fu_290_p1;
                elsif ((ap_const_boolean_1 = ap_condition_517)) then 
                    acc_keep_V_1_reg_86 <= zext_ln414_4_fu_266_p1;
                elsif ((ap_const_boolean_1 = ap_condition_512)) then 
                    acc_keep_V_1_reg_86 <= zext_ln414_3_fu_243_p1;
                elsif ((ap_const_boolean_1 = ap_condition_507)) then 
                    acc_keep_V_1_reg_86 <= zext_ln414_2_fu_221_p1;
                elsif ((ap_const_boolean_1 = ap_condition_502)) then 
                    acc_keep_V_1_reg_86 <= zext_ln414_1_fu_200_p1;
                elsif ((ap_const_boolean_1 = ap_condition_497)) then 
                    acc_keep_V_1_reg_86 <= zext_ln414_fu_181_p1;
                end if;
            end if; 
        end if;
    end process;

    acc_last_V_write_assign_reg_128_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op66_read_state8 = ap_const_boolean_1))) and (tmp_last_V_5_reg_536 = ap_const_lv1_0) and (tmp_last_V_4_reg_508 = ap_const_lv1_0) and (tmp_last_V_3_reg_479 = ap_const_lv1_0) and (tmp_last_V_2_reg_449 = ap_const_lv1_0) and (tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_6_reg_560 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_logic_1 = ap_ce))) then 
                acc_last_V_write_assign_reg_128 <= axis01_TLAST;
            elsif (((not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op58_read_state7 = ap_const_boolean_1))) and (tmp_last_V_5_reg_536 = ap_const_lv1_0) and (tmp_last_V_4_reg_508 = ap_const_lv1_0) and (tmp_last_V_3_reg_479 = ap_const_lv1_0) and (tmp_last_V_2_reg_449 = ap_const_lv1_0) and (tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (grp_fu_165_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_ce)) or (not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op58_read_state7 = ap_const_boolean_1))) and (tmp_last_V_5_reg_536 = ap_const_lv1_1) and (tmp_last_V_4_reg_508 = ap_const_lv1_0) and (tmp_last_V_3_reg_479 = ap_const_lv1_0) and (tmp_last_V_2_reg_449 = ap_const_lv1_0) and (tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_logic_1 = ap_ce)) or (not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op50_read_state6 = ap_const_boolean_1))) and (tmp_last_V_4_reg_508 = ap_const_lv1_1) and (tmp_last_V_3_reg_479 = ap_const_lv1_0) and (tmp_last_V_2_reg_449 = ap_const_lv1_0) and (tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_logic_1 = ap_ce)) or (not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op42_read_state5 = ap_const_boolean_1))) and (tmp_last_V_3_reg_479 = ap_const_lv1_1) and (tmp_last_V_2_reg_449 = ap_const_lv1_0) and (tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = ap_ce)) or (not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op34_read_state4 = ap_const_boolean_1))) and (tmp_last_V_2_reg_449 = ap_const_lv1_1) and (tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_logic_1 = ap_ce)) or (not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op26_read_state3 = ap_const_boolean_1))) and (tmp_last_V_1_reg_418 = ap_const_lv1_1) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = ap_ce)) or (not(((tmp_last_V_reg_386 = ap_const_lv1_0) and (axis01_TVALID = ap_const_logic_0))) and (tmp_last_V_reg_386 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce)))) then 
                acc_last_V_write_assign_reg_128 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((axis01_TVALID = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_logic_1 = ap_ce))) then
                ap_port_reg_acc_data_V_read <= acc_data_V_read;
                tmp_data_V_reg_368 <= axis01_TDATA;
                tmp_keep_V_reg_374 <= axis01_TKEEP;
                tmp_last_V_reg_386 <= axis01_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op26_read_state3 = ap_const_boolean_1))) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = ap_ce))) then
                p_Result_1_reg_422 <= p_Result_1_fu_184_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op42_read_state5 = ap_const_boolean_1))) and (tmp_last_V_2_reg_449 = ap_const_lv1_0) and (tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = ap_ce))) then
                p_Result_3_reg_483 <= p_Result_3_fu_225_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op50_read_state6 = ap_const_boolean_1))) and (tmp_last_V_3_reg_479 = ap_const_lv1_0) and (tmp_last_V_2_reg_449 = ap_const_lv1_0) and (tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_logic_1 = ap_ce))) then
                p_Result_4_reg_512 <= p_Result_4_fu_247_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op34_read_state4 = ap_const_boolean_1))) and (tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_logic_1 = ap_ce))) then
                p_Result_s_10_reg_453 <= p_Result_s_10_fu_204_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((tmp_last_V_reg_386 = ap_const_lv1_0) and (axis01_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then
                p_Result_s_reg_390 <= p_Result_s_fu_170_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((tmp_last_V_reg_386 = ap_const_lv1_0) and (axis01_TVALID = ap_const_logic_0))) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then
                tmp_data_V_1_reg_401 <= axis01_TDATA;
                tmp_keep_V_1_reg_407 <= axis01_TKEEP;
                tmp_last_V_1_reg_418 <= axis01_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op26_read_state3 = ap_const_boolean_1))) and (tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = ap_ce))) then
                tmp_data_V_2_reg_433 <= axis01_TDATA;
                tmp_keep_V_2_reg_439 <= axis01_TKEEP;
                tmp_last_V_2_reg_449 <= axis01_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op34_read_state4 = ap_const_boolean_1))) and (tmp_last_V_2_reg_449 = ap_const_lv1_0) and (tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_logic_1 = ap_ce))) then
                tmp_data_V_3_reg_464 <= axis01_TDATA;
                tmp_keep_V_3_reg_470 <= axis01_TKEEP;
                tmp_last_V_3_reg_479 <= axis01_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op42_read_state5 = ap_const_boolean_1))) and (tmp_last_V_3_reg_479 = ap_const_lv1_0) and (tmp_last_V_2_reg_449 = ap_const_lv1_0) and (tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = ap_ce))) then
                tmp_data_V_4_reg_494 <= axis01_TDATA;
                tmp_keep_V_4_reg_500 <= axis01_TKEEP;
                tmp_last_V_4_reg_508 <= axis01_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op50_read_state6 = ap_const_boolean_1))) and (tmp_last_V_4_reg_508 = ap_const_lv1_0) and (tmp_last_V_3_reg_479 = ap_const_lv1_0) and (tmp_last_V_2_reg_449 = ap_const_lv1_0) and (tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_logic_1 = ap_ce))) then
                tmp_data_V_5_reg_523 <= axis01_TDATA;
                tmp_keep_V_5_reg_529 <= axis01_TKEEP;
                tmp_last_V_5_reg_536 <= axis01_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op58_read_state7 = ap_const_boolean_1))) and (tmp_last_V_5_reg_536 = ap_const_lv1_0) and (tmp_last_V_4_reg_508 = ap_const_lv1_0) and (tmp_last_V_3_reg_479 = ap_const_lv1_0) and (tmp_last_V_2_reg_449 = ap_const_lv1_0) and (tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_logic_1 = ap_ce))) then
                tmp_data_V_6_reg_550 <= axis01_TDATA;
                tmp_keep_V_6_reg_555 <= axis01_TKEEP;
                tmp_last_V_6_reg_560 <= axis01_TLAST;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, axis01_TVALID, ap_CS_fsm_state2, tmp_last_V_reg_386, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_ce, ap_predicate_op26_read_state3, ap_predicate_op34_read_state4, ap_predicate_op42_read_state5, ap_predicate_op50_read_state6, ap_predicate_op58_read_state7, ap_predicate_op66_read_state8)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((axis01_TVALID = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((tmp_last_V_reg_386 = ap_const_lv1_0) and (axis01_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op26_read_state3 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op34_read_state4 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if ((not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op42_read_state5 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if ((not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op50_read_state6 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if ((not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op58_read_state7 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if ((not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op66_read_state8 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_logic_1 = ap_ce))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_block_state1_assign_proc : process(ap_start, axis01_TVALID)
    begin
                ap_block_state1 <= ((axis01_TVALID = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state2_assign_proc : process(axis01_TVALID, tmp_last_V_reg_386)
    begin
                ap_block_state2 <= ((tmp_last_V_reg_386 = ap_const_lv1_0) and (axis01_TVALID = ap_const_logic_0));
    end process;


    ap_block_state3_assign_proc : process(axis01_TVALID, ap_predicate_op26_read_state3)
    begin
                ap_block_state3 <= ((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op26_read_state3 = ap_const_boolean_1));
    end process;


    ap_block_state4_assign_proc : process(axis01_TVALID, ap_predicate_op34_read_state4)
    begin
                ap_block_state4 <= ((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op34_read_state4 = ap_const_boolean_1));
    end process;


    ap_block_state5_assign_proc : process(axis01_TVALID, ap_predicate_op42_read_state5)
    begin
                ap_block_state5 <= ((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op42_read_state5 = ap_const_boolean_1));
    end process;


    ap_block_state6_assign_proc : process(axis01_TVALID, ap_predicate_op50_read_state6)
    begin
                ap_block_state6 <= ((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op50_read_state6 = ap_const_boolean_1));
    end process;


    ap_block_state7_assign_proc : process(axis01_TVALID, ap_predicate_op58_read_state7)
    begin
                ap_block_state7 <= ((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op58_read_state7 = ap_const_boolean_1));
    end process;


    ap_block_state8_assign_proc : process(axis01_TVALID, ap_predicate_op66_read_state8)
    begin
                ap_block_state8 <= ((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op66_read_state8 = ap_const_boolean_1));
    end process;


    ap_condition_497_assign_proc : process(axis01_TVALID, ap_CS_fsm_state2, tmp_last_V_reg_386)
    begin
                ap_condition_497 <= (not(((tmp_last_V_reg_386 = ap_const_lv1_0) and (axis01_TVALID = ap_const_logic_0))) and (tmp_last_V_reg_386 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2));
    end process;


    ap_condition_502_assign_proc : process(axis01_TVALID, tmp_last_V_reg_386, ap_CS_fsm_state3, tmp_last_V_1_reg_418, ap_predicate_op26_read_state3)
    begin
                ap_condition_502 <= (not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op26_read_state3 = ap_const_boolean_1))) and (tmp_last_V_1_reg_418 = ap_const_lv1_1) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3));
    end process;


    ap_condition_507_assign_proc : process(axis01_TVALID, tmp_last_V_reg_386, tmp_last_V_1_reg_418, ap_CS_fsm_state4, tmp_last_V_2_reg_449, ap_predicate_op34_read_state4)
    begin
                ap_condition_507 <= (not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op34_read_state4 = ap_const_boolean_1))) and (tmp_last_V_2_reg_449 = ap_const_lv1_1) and (tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4));
    end process;


    ap_condition_512_assign_proc : process(axis01_TVALID, tmp_last_V_reg_386, tmp_last_V_1_reg_418, tmp_last_V_2_reg_449, ap_CS_fsm_state5, tmp_last_V_3_reg_479, ap_predicate_op42_read_state5)
    begin
                ap_condition_512 <= (not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op42_read_state5 = ap_const_boolean_1))) and (tmp_last_V_3_reg_479 = ap_const_lv1_1) and (tmp_last_V_2_reg_449 = ap_const_lv1_0) and (tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5));
    end process;


    ap_condition_517_assign_proc : process(axis01_TVALID, tmp_last_V_reg_386, tmp_last_V_1_reg_418, tmp_last_V_2_reg_449, tmp_last_V_3_reg_479, ap_CS_fsm_state6, tmp_last_V_4_reg_508, ap_predicate_op50_read_state6)
    begin
                ap_condition_517 <= (not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op50_read_state6 = ap_const_boolean_1))) and (tmp_last_V_4_reg_508 = ap_const_lv1_1) and (tmp_last_V_3_reg_479 = ap_const_lv1_0) and (tmp_last_V_2_reg_449 = ap_const_lv1_0) and (tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6));
    end process;


    ap_condition_522_assign_proc : process(axis01_TVALID, tmp_last_V_reg_386, tmp_last_V_1_reg_418, tmp_last_V_2_reg_449, tmp_last_V_3_reg_479, tmp_last_V_4_reg_508, ap_CS_fsm_state7, tmp_last_V_5_reg_536, ap_predicate_op58_read_state7)
    begin
                ap_condition_522 <= (not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op58_read_state7 = ap_const_boolean_1))) and (tmp_last_V_5_reg_536 = ap_const_lv1_1) and (tmp_last_V_4_reg_508 = ap_const_lv1_0) and (tmp_last_V_3_reg_479 = ap_const_lv1_0) and (tmp_last_V_2_reg_449 = ap_const_lv1_0) and (tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7));
    end process;


    ap_condition_526_assign_proc : process(axis01_TVALID, tmp_last_V_reg_386, tmp_last_V_1_reg_418, tmp_last_V_2_reg_449, tmp_last_V_3_reg_479, tmp_last_V_4_reg_508, ap_CS_fsm_state7, tmp_last_V_5_reg_536, grp_fu_165_p1, ap_predicate_op58_read_state7)
    begin
                ap_condition_526 <= (not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op58_read_state7 = ap_const_boolean_1))) and (tmp_last_V_5_reg_536 = ap_const_lv1_0) and (tmp_last_V_4_reg_508 = ap_const_lv1_0) and (tmp_last_V_3_reg_479 = ap_const_lv1_0) and (tmp_last_V_2_reg_449 = ap_const_lv1_0) and (tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (grp_fu_165_p1 = ap_const_lv1_1));
    end process;


    ap_condition_530_assign_proc : process(axis01_TVALID, tmp_last_V_reg_386, tmp_last_V_1_reg_418, tmp_last_V_2_reg_449, tmp_last_V_3_reg_479, tmp_last_V_4_reg_508, tmp_last_V_5_reg_536, ap_CS_fsm_state8, tmp_last_V_6_reg_560, ap_predicate_op66_read_state8)
    begin
                ap_condition_530 <= (not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op66_read_state8 = ap_const_boolean_1))) and (tmp_last_V_5_reg_536 = ap_const_lv1_0) and (tmp_last_V_4_reg_508 = ap_const_lv1_0) and (tmp_last_V_3_reg_479 = ap_const_lv1_0) and (tmp_last_V_2_reg_449 = ap_const_lv1_0) and (tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_6_reg_560 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, axis01_TVALID, ap_CS_fsm_state8, ap_ce, ap_predicate_op66_read_state8)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op66_read_state8 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_logic_1 = ap_ce)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_acc_data_V_1_phi_fu_110_p16_assign_proc : process(tmp_last_V_reg_386, tmp_last_V_1_reg_418, tmp_last_V_2_reg_449, tmp_last_V_3_reg_479, tmp_last_V_4_reg_508, tmp_last_V_5_reg_536, ap_CS_fsm_state8, tmp_last_V_6_reg_560, acc_data_V_1_reg_107, p_Result_7_fu_322_p9)
    begin
        if (((tmp_last_V_5_reg_536 = ap_const_lv1_0) and (tmp_last_V_4_reg_508 = ap_const_lv1_0) and (tmp_last_V_3_reg_479 = ap_const_lv1_0) and (tmp_last_V_2_reg_449 = ap_const_lv1_0) and (tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_6_reg_560 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            ap_phi_mux_acc_data_V_1_phi_fu_110_p16 <= p_Result_7_fu_322_p9;
        else 
            ap_phi_mux_acc_data_V_1_phi_fu_110_p16 <= acc_data_V_1_reg_107;
        end if; 
    end process;


    ap_phi_mux_acc_keep_V_1_phi_fu_89_p16_assign_proc : process(tmp_last_V_reg_386, tmp_last_V_1_reg_418, tmp_last_V_2_reg_449, tmp_last_V_3_reg_479, tmp_last_V_4_reg_508, tmp_last_V_5_reg_536, ap_CS_fsm_state8, tmp_last_V_6_reg_560, acc_keep_V_1_reg_86, p_Result_2_7_fu_336_p9)
    begin
        if (((tmp_last_V_5_reg_536 = ap_const_lv1_0) and (tmp_last_V_4_reg_508 = ap_const_lv1_0) and (tmp_last_V_3_reg_479 = ap_const_lv1_0) and (tmp_last_V_2_reg_449 = ap_const_lv1_0) and (tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_6_reg_560 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            ap_phi_mux_acc_keep_V_1_phi_fu_89_p16 <= p_Result_2_7_fu_336_p9;
        else 
            ap_phi_mux_acc_keep_V_1_phi_fu_89_p16 <= acc_keep_V_1_reg_86;
        end if; 
    end process;


    ap_phi_mux_acc_last_V_write_assign_phi_fu_132_p16_assign_proc : process(axis01_TLAST, tmp_last_V_reg_386, tmp_last_V_1_reg_418, tmp_last_V_2_reg_449, tmp_last_V_3_reg_479, tmp_last_V_4_reg_508, tmp_last_V_5_reg_536, ap_CS_fsm_state8, tmp_last_V_6_reg_560, acc_last_V_write_assign_reg_128)
    begin
        if (((tmp_last_V_5_reg_536 = ap_const_lv1_0) and (tmp_last_V_4_reg_508 = ap_const_lv1_0) and (tmp_last_V_3_reg_479 = ap_const_lv1_0) and (tmp_last_V_2_reg_449 = ap_const_lv1_0) and (tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_6_reg_560 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            ap_phi_mux_acc_last_V_write_assign_phi_fu_132_p16 <= axis01_TLAST;
        else 
            ap_phi_mux_acc_last_V_write_assign_phi_fu_132_p16 <= acc_last_V_write_assign_reg_128;
        end if; 
    end process;


    ap_predicate_op26_read_state3_assign_proc : process(tmp_last_V_reg_386, tmp_last_V_1_reg_418)
    begin
                ap_predicate_op26_read_state3 <= ((tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0));
    end process;


    ap_predicate_op34_read_state4_assign_proc : process(tmp_last_V_reg_386, tmp_last_V_1_reg_418, tmp_last_V_2_reg_449)
    begin
                ap_predicate_op34_read_state4 <= ((tmp_last_V_2_reg_449 = ap_const_lv1_0) and (tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0));
    end process;


    ap_predicate_op42_read_state5_assign_proc : process(tmp_last_V_reg_386, tmp_last_V_1_reg_418, tmp_last_V_2_reg_449, tmp_last_V_3_reg_479)
    begin
                ap_predicate_op42_read_state5 <= ((tmp_last_V_3_reg_479 = ap_const_lv1_0) and (tmp_last_V_2_reg_449 = ap_const_lv1_0) and (tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0));
    end process;


    ap_predicate_op50_read_state6_assign_proc : process(tmp_last_V_reg_386, tmp_last_V_1_reg_418, tmp_last_V_2_reg_449, tmp_last_V_3_reg_479, tmp_last_V_4_reg_508)
    begin
                ap_predicate_op50_read_state6 <= ((tmp_last_V_4_reg_508 = ap_const_lv1_0) and (tmp_last_V_3_reg_479 = ap_const_lv1_0) and (tmp_last_V_2_reg_449 = ap_const_lv1_0) and (tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0));
    end process;


    ap_predicate_op58_read_state7_assign_proc : process(tmp_last_V_reg_386, tmp_last_V_1_reg_418, tmp_last_V_2_reg_449, tmp_last_V_3_reg_479, tmp_last_V_4_reg_508, tmp_last_V_5_reg_536)
    begin
                ap_predicate_op58_read_state7 <= ((tmp_last_V_5_reg_536 = ap_const_lv1_0) and (tmp_last_V_4_reg_508 = ap_const_lv1_0) and (tmp_last_V_3_reg_479 = ap_const_lv1_0) and (tmp_last_V_2_reg_449 = ap_const_lv1_0) and (tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0));
    end process;


    ap_predicate_op66_read_state8_assign_proc : process(tmp_last_V_reg_386, tmp_last_V_1_reg_418, tmp_last_V_2_reg_449, tmp_last_V_3_reg_479, tmp_last_V_4_reg_508, tmp_last_V_5_reg_536, tmp_last_V_6_reg_560)
    begin
                ap_predicate_op66_read_state8 <= ((tmp_last_V_5_reg_536 = ap_const_lv1_0) and (tmp_last_V_4_reg_508 = ap_const_lv1_0) and (tmp_last_V_3_reg_479 = ap_const_lv1_0) and (tmp_last_V_2_reg_449 = ap_const_lv1_0) and (tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_6_reg_560 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(axis01_TVALID, ap_CS_fsm_state8, ap_ce, ap_predicate_op66_read_state8)
    begin
        if ((not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op66_read_state8 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_logic_1 = ap_ce))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= ap_phi_mux_acc_data_V_1_phi_fu_110_p16;
    ap_return_1 <= ap_phi_mux_acc_keep_V_1_phi_fu_89_p16;
    ap_return_2 <= ap_phi_mux_acc_last_V_write_assign_phi_fu_132_p16;

    axis01_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, axis01_TVALID, ap_CS_fsm_state2, tmp_last_V_reg_386, ap_CS_fsm_state3, tmp_last_V_1_reg_418, ap_CS_fsm_state4, tmp_last_V_2_reg_449, ap_CS_fsm_state5, tmp_last_V_3_reg_479, ap_CS_fsm_state6, tmp_last_V_4_reg_508, ap_CS_fsm_state7, tmp_last_V_5_reg_536, ap_CS_fsm_state8, tmp_last_V_6_reg_560)
    begin
        if ((((tmp_last_V_5_reg_536 = ap_const_lv1_0) and (tmp_last_V_4_reg_508 = ap_const_lv1_0) and (tmp_last_V_3_reg_479 = ap_const_lv1_0) and (tmp_last_V_2_reg_449 = ap_const_lv1_0) and (tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_6_reg_560 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((tmp_last_V_5_reg_536 = ap_const_lv1_0) and (tmp_last_V_4_reg_508 = ap_const_lv1_0) and (tmp_last_V_3_reg_479 = ap_const_lv1_0) and (tmp_last_V_2_reg_449 = ap_const_lv1_0) and (tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((tmp_last_V_4_reg_508 = ap_const_lv1_0) and (tmp_last_V_3_reg_479 = ap_const_lv1_0) and (tmp_last_V_2_reg_449 = ap_const_lv1_0) and (tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((tmp_last_V_3_reg_479 = ap_const_lv1_0) and (tmp_last_V_2_reg_449 = ap_const_lv1_0) and (tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((tmp_last_V_2_reg_449 = ap_const_lv1_0) and (tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((tmp_last_V_1_reg_418 = ap_const_lv1_0) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            axis01_TDATA_blk_n <= axis01_TVALID;
        else 
            axis01_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    axis01_TREADY_assign_proc : process(ap_start, ap_CS_fsm_state1, axis01_TVALID, ap_CS_fsm_state2, tmp_last_V_reg_386, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_ce, ap_predicate_op26_read_state3, ap_predicate_op34_read_state4, ap_predicate_op42_read_state5, ap_predicate_op50_read_state6, ap_predicate_op58_read_state7, ap_predicate_op66_read_state8)
    begin
        if (((not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op58_read_state7 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state7) and (ap_predicate_op58_read_state7 = ap_const_boolean_1) and (ap_const_logic_1 = ap_ce)) or (not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op50_read_state6 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (ap_predicate_op50_read_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_ce)) or (not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op42_read_state5 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state5) and (ap_predicate_op42_read_state5 = ap_const_boolean_1) and (ap_const_logic_1 = ap_ce)) or (not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op34_read_state4 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state4) and (ap_predicate_op34_read_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_ce)) or (not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op26_read_state3 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_predicate_op26_read_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_ce)) or (not(((tmp_last_V_reg_386 = ap_const_lv1_0) and (axis01_TVALID = ap_const_logic_0))) and (tmp_last_V_reg_386 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce)) or (not(((axis01_TVALID = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_logic_1 = ap_ce)) or (not(((axis01_TVALID = ap_const_logic_0) and (ap_predicate_op66_read_state8 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state8) and (ap_predicate_op66_read_state8 = ap_const_boolean_1) and (ap_const_logic_1 = ap_ce)))) then 
            axis01_TREADY <= ap_const_logic_1;
        else 
            axis01_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_165_p1 <= axis01_TLAST;
    p_Result_1_fu_184_p5 <= (p_Result_s_reg_390(255 downto 64) & tmp_data_V_1_reg_401 & p_Result_s_reg_390(31 downto 0));
    p_Result_2_7_fu_336_p9 <= (((((((axis01_TKEEP & tmp_keep_V_6_reg_555) & tmp_keep_V_5_reg_529) & tmp_keep_V_4_reg_500) & tmp_keep_V_3_reg_470) & tmp_keep_V_2_reg_439) & tmp_keep_V_1_reg_407) & tmp_keep_V_reg_374);
    p_Result_3_fu_225_p5 <= (p_Result_s_10_reg_453(255 downto 128) & tmp_data_V_3_reg_464 & p_Result_s_10_reg_453(95 downto 0));
    p_Result_4_fu_247_p5 <= (p_Result_3_reg_483(255 downto 160) & tmp_data_V_4_reg_494 & p_Result_3_reg_483(127 downto 0));
    p_Result_5_fu_270_p5 <= (p_Result_4_reg_512(255 downto 192) & tmp_data_V_5_reg_523 & p_Result_4_reg_512(159 downto 0));
    p_Result_6_fu_294_p5 <= (p_Result_5_fu_270_p5(255 downto 224) & axis01_TDATA & p_Result_5_fu_270_p5(191 downto 0));
    p_Result_7_fu_322_p9 <= (((((((axis01_TDATA & tmp_data_V_6_reg_550) & tmp_data_V_5_reg_523) & tmp_data_V_4_reg_494) & tmp_data_V_3_reg_464) & tmp_data_V_2_reg_433) & tmp_data_V_1_reg_401) & tmp_data_V_reg_368);
    p_Result_s_10_fu_204_p5 <= (p_Result_1_reg_422(255 downto 96) & tmp_data_V_2_reg_433 & p_Result_1_reg_422(63 downto 0));
    p_Result_s_fu_170_p5 <= (ap_port_reg_acc_data_V_read(255 downto 32) & tmp_data_V_reg_368);
    tmp_1_fu_214_p4 <= ((tmp_keep_V_2_reg_439 & tmp_keep_V_1_reg_407) & tmp_keep_V_reg_374);
    tmp_2_fu_235_p5 <= (((tmp_keep_V_3_reg_470 & tmp_keep_V_2_reg_439) & tmp_keep_V_1_reg_407) & tmp_keep_V_reg_374);
    tmp_3_fu_257_p6 <= ((((tmp_keep_V_4_reg_500 & tmp_keep_V_3_reg_470) & tmp_keep_V_2_reg_439) & tmp_keep_V_1_reg_407) & tmp_keep_V_reg_374);
    tmp_4_fu_280_p7 <= (((((tmp_keep_V_5_reg_529 & tmp_keep_V_4_reg_500) & tmp_keep_V_3_reg_470) & tmp_keep_V_2_reg_439) & tmp_keep_V_1_reg_407) & tmp_keep_V_reg_374);
    tmp_5_fu_306_p8 <= ((((((axis01_TKEEP & tmp_keep_V_5_reg_529) & tmp_keep_V_4_reg_500) & tmp_keep_V_3_reg_470) & tmp_keep_V_2_reg_439) & tmp_keep_V_1_reg_407) & tmp_keep_V_reg_374);
    tmp_fu_194_p3 <= (tmp_keep_V_1_reg_407 & tmp_keep_V_reg_374);
    zext_ln414_1_fu_200_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_194_p3),32));
    zext_ln414_2_fu_221_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_214_p4),32));
    zext_ln414_3_fu_243_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_235_p5),32));
    zext_ln414_4_fu_266_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_257_p6),32));
    zext_ln414_5_fu_290_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_280_p7),32));
    zext_ln414_6_fu_318_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_306_p8),32));
    zext_ln414_fu_181_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_keep_V_reg_374),32));
end behav;
