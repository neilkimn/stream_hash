// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "read_stream_32_256_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic read_stream_32_256_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic read_stream_32_256_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> read_stream_32_256_s::ap_ST_fsm_state1 = "1";
const sc_lv<8> read_stream_32_256_s::ap_ST_fsm_state2 = "10";
const sc_lv<8> read_stream_32_256_s::ap_ST_fsm_state3 = "100";
const sc_lv<8> read_stream_32_256_s::ap_ST_fsm_state4 = "1000";
const sc_lv<8> read_stream_32_256_s::ap_ST_fsm_state5 = "10000";
const sc_lv<8> read_stream_32_256_s::ap_ST_fsm_state6 = "100000";
const sc_lv<8> read_stream_32_256_s::ap_ST_fsm_state7 = "1000000";
const sc_lv<8> read_stream_32_256_s::ap_ST_fsm_state8 = "10000000";
const bool read_stream_32_256_s::ap_const_boolean_1 = true;
const sc_lv<32> read_stream_32_256_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> read_stream_32_256_s::ap_const_lv32_1 = "1";
const sc_lv<1> read_stream_32_256_s::ap_const_lv1_0 = "0";
const sc_lv<32> read_stream_32_256_s::ap_const_lv32_2 = "10";
const sc_lv<32> read_stream_32_256_s::ap_const_lv32_3 = "11";
const sc_lv<32> read_stream_32_256_s::ap_const_lv32_4 = "100";
const sc_lv<32> read_stream_32_256_s::ap_const_lv32_5 = "101";
const sc_lv<32> read_stream_32_256_s::ap_const_lv32_6 = "110";
const sc_lv<32> read_stream_32_256_s::ap_const_lv32_7 = "111";
const sc_lv<1> read_stream_32_256_s::ap_const_lv1_1 = "1";
const sc_lv<32> read_stream_32_256_s::ap_const_lv32_1F = "11111";
const sc_lv<32> read_stream_32_256_s::ap_const_lv32_20 = "100000";
const sc_lv<32> read_stream_32_256_s::ap_const_lv32_3F = "111111";
const sc_lv<32> read_stream_32_256_s::ap_const_lv32_40 = "1000000";
const sc_lv<32> read_stream_32_256_s::ap_const_lv32_5F = "1011111";
const sc_lv<32> read_stream_32_256_s::ap_const_lv32_60 = "1100000";
const sc_lv<32> read_stream_32_256_s::ap_const_lv32_7F = "1111111";
const sc_lv<32> read_stream_32_256_s::ap_const_lv32_80 = "10000000";
const sc_lv<32> read_stream_32_256_s::ap_const_lv32_9F = "10011111";
const sc_lv<32> read_stream_32_256_s::ap_const_lv32_A0 = "10100000";
const sc_lv<32> read_stream_32_256_s::ap_const_lv32_BF = "10111111";
const sc_lv<32> read_stream_32_256_s::ap_const_lv32_C0 = "11000000";
const sc_lv<32> read_stream_32_256_s::ap_const_lv32_DF = "11011111";

read_stream_32_256_s::read_stream_32_256_s(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( axis01_TVALID );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( axis01_TVALID );
    sensitive << ( tmp_last_V_reg_386 );

    SC_METHOD(thread_ap_block_state3);
    sensitive << ( axis01_TVALID );
    sensitive << ( ap_predicate_op26_read_state3 );

    SC_METHOD(thread_ap_block_state4);
    sensitive << ( axis01_TVALID );
    sensitive << ( ap_predicate_op34_read_state4 );

    SC_METHOD(thread_ap_block_state5);
    sensitive << ( axis01_TVALID );
    sensitive << ( ap_predicate_op42_read_state5 );

    SC_METHOD(thread_ap_block_state6);
    sensitive << ( axis01_TVALID );
    sensitive << ( ap_predicate_op50_read_state6 );

    SC_METHOD(thread_ap_block_state7);
    sensitive << ( axis01_TVALID );
    sensitive << ( ap_predicate_op58_read_state7 );

    SC_METHOD(thread_ap_block_state8);
    sensitive << ( axis01_TVALID );
    sensitive << ( ap_predicate_op66_read_state8 );

    SC_METHOD(thread_ap_condition_497);
    sensitive << ( axis01_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_last_V_reg_386 );

    SC_METHOD(thread_ap_condition_502);
    sensitive << ( axis01_TVALID );
    sensitive << ( tmp_last_V_reg_386 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_last_V_1_reg_418 );
    sensitive << ( ap_predicate_op26_read_state3 );

    SC_METHOD(thread_ap_condition_507);
    sensitive << ( axis01_TVALID );
    sensitive << ( tmp_last_V_reg_386 );
    sensitive << ( tmp_last_V_1_reg_418 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_last_V_2_reg_449 );
    sensitive << ( ap_predicate_op34_read_state4 );

    SC_METHOD(thread_ap_condition_512);
    sensitive << ( axis01_TVALID );
    sensitive << ( tmp_last_V_reg_386 );
    sensitive << ( tmp_last_V_1_reg_418 );
    sensitive << ( tmp_last_V_2_reg_449 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_last_V_3_reg_479 );
    sensitive << ( ap_predicate_op42_read_state5 );

    SC_METHOD(thread_ap_condition_517);
    sensitive << ( axis01_TVALID );
    sensitive << ( tmp_last_V_reg_386 );
    sensitive << ( tmp_last_V_1_reg_418 );
    sensitive << ( tmp_last_V_2_reg_449 );
    sensitive << ( tmp_last_V_3_reg_479 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_last_V_4_reg_508 );
    sensitive << ( ap_predicate_op50_read_state6 );

    SC_METHOD(thread_ap_condition_522);
    sensitive << ( axis01_TVALID );
    sensitive << ( tmp_last_V_reg_386 );
    sensitive << ( tmp_last_V_1_reg_418 );
    sensitive << ( tmp_last_V_2_reg_449 );
    sensitive << ( tmp_last_V_3_reg_479 );
    sensitive << ( tmp_last_V_4_reg_508 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_last_V_5_reg_536 );
    sensitive << ( ap_predicate_op58_read_state7 );

    SC_METHOD(thread_ap_condition_526);
    sensitive << ( axis01_TVALID );
    sensitive << ( tmp_last_V_reg_386 );
    sensitive << ( tmp_last_V_1_reg_418 );
    sensitive << ( tmp_last_V_2_reg_449 );
    sensitive << ( tmp_last_V_3_reg_479 );
    sensitive << ( tmp_last_V_4_reg_508 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_last_V_5_reg_536 );
    sensitive << ( grp_fu_165_p1 );
    sensitive << ( ap_predicate_op58_read_state7 );

    SC_METHOD(thread_ap_condition_530);
    sensitive << ( axis01_TVALID );
    sensitive << ( tmp_last_V_reg_386 );
    sensitive << ( tmp_last_V_1_reg_418 );
    sensitive << ( tmp_last_V_2_reg_449 );
    sensitive << ( tmp_last_V_3_reg_479 );
    sensitive << ( tmp_last_V_4_reg_508 );
    sensitive << ( tmp_last_V_5_reg_536 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_last_V_6_reg_560 );
    sensitive << ( ap_predicate_op66_read_state8 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( axis01_TVALID );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_ce );
    sensitive << ( ap_predicate_op66_read_state8 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_acc_data_V_1_phi_fu_110_p16);
    sensitive << ( tmp_last_V_reg_386 );
    sensitive << ( tmp_last_V_1_reg_418 );
    sensitive << ( tmp_last_V_2_reg_449 );
    sensitive << ( tmp_last_V_3_reg_479 );
    sensitive << ( tmp_last_V_4_reg_508 );
    sensitive << ( tmp_last_V_5_reg_536 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_last_V_6_reg_560 );
    sensitive << ( acc_data_V_1_reg_107 );
    sensitive << ( p_Result_7_fu_322_p9 );

    SC_METHOD(thread_ap_phi_mux_acc_keep_V_1_phi_fu_89_p16);
    sensitive << ( tmp_last_V_reg_386 );
    sensitive << ( tmp_last_V_1_reg_418 );
    sensitive << ( tmp_last_V_2_reg_449 );
    sensitive << ( tmp_last_V_3_reg_479 );
    sensitive << ( tmp_last_V_4_reg_508 );
    sensitive << ( tmp_last_V_5_reg_536 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_last_V_6_reg_560 );
    sensitive << ( acc_keep_V_1_reg_86 );
    sensitive << ( p_Result_2_7_fu_336_p9 );

    SC_METHOD(thread_ap_phi_mux_acc_last_V_write_assign_phi_fu_132_p16);
    sensitive << ( axis01_TLAST );
    sensitive << ( tmp_last_V_reg_386 );
    sensitive << ( tmp_last_V_1_reg_418 );
    sensitive << ( tmp_last_V_2_reg_449 );
    sensitive << ( tmp_last_V_3_reg_479 );
    sensitive << ( tmp_last_V_4_reg_508 );
    sensitive << ( tmp_last_V_5_reg_536 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_last_V_6_reg_560 );
    sensitive << ( acc_last_V_write_assign_reg_128 );

    SC_METHOD(thread_ap_predicate_op26_read_state3);
    sensitive << ( tmp_last_V_reg_386 );
    sensitive << ( tmp_last_V_1_reg_418 );

    SC_METHOD(thread_ap_predicate_op34_read_state4);
    sensitive << ( tmp_last_V_reg_386 );
    sensitive << ( tmp_last_V_1_reg_418 );
    sensitive << ( tmp_last_V_2_reg_449 );

    SC_METHOD(thread_ap_predicate_op42_read_state5);
    sensitive << ( tmp_last_V_reg_386 );
    sensitive << ( tmp_last_V_1_reg_418 );
    sensitive << ( tmp_last_V_2_reg_449 );
    sensitive << ( tmp_last_V_3_reg_479 );

    SC_METHOD(thread_ap_predicate_op50_read_state6);
    sensitive << ( tmp_last_V_reg_386 );
    sensitive << ( tmp_last_V_1_reg_418 );
    sensitive << ( tmp_last_V_2_reg_449 );
    sensitive << ( tmp_last_V_3_reg_479 );
    sensitive << ( tmp_last_V_4_reg_508 );

    SC_METHOD(thread_ap_predicate_op58_read_state7);
    sensitive << ( tmp_last_V_reg_386 );
    sensitive << ( tmp_last_V_1_reg_418 );
    sensitive << ( tmp_last_V_2_reg_449 );
    sensitive << ( tmp_last_V_3_reg_479 );
    sensitive << ( tmp_last_V_4_reg_508 );
    sensitive << ( tmp_last_V_5_reg_536 );

    SC_METHOD(thread_ap_predicate_op66_read_state8);
    sensitive << ( tmp_last_V_reg_386 );
    sensitive << ( tmp_last_V_1_reg_418 );
    sensitive << ( tmp_last_V_2_reg_449 );
    sensitive << ( tmp_last_V_3_reg_479 );
    sensitive << ( tmp_last_V_4_reg_508 );
    sensitive << ( tmp_last_V_5_reg_536 );
    sensitive << ( tmp_last_V_6_reg_560 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( axis01_TVALID );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_ce );
    sensitive << ( ap_predicate_op66_read_state8 );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( axis01_TVALID );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_ce );
    sensitive << ( ap_predicate_op66_read_state8 );
    sensitive << ( ap_phi_mux_acc_data_V_1_phi_fu_110_p16 );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( axis01_TVALID );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_ce );
    sensitive << ( ap_phi_mux_acc_keep_V_1_phi_fu_89_p16 );
    sensitive << ( ap_predicate_op66_read_state8 );

    SC_METHOD(thread_ap_return_2);
    sensitive << ( axis01_TVALID );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_ce );
    sensitive << ( ap_predicate_op66_read_state8 );
    sensitive << ( ap_phi_mux_acc_last_V_write_assign_phi_fu_132_p16 );

    SC_METHOD(thread_axis01_TDATA_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( axis01_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_last_V_reg_386 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_last_V_1_reg_418 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_last_V_2_reg_449 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_last_V_3_reg_479 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_last_V_4_reg_508 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_last_V_5_reg_536 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_last_V_6_reg_560 );

    SC_METHOD(thread_axis01_TREADY);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( axis01_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_last_V_reg_386 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_ce );
    sensitive << ( ap_predicate_op26_read_state3 );
    sensitive << ( ap_predicate_op34_read_state4 );
    sensitive << ( ap_predicate_op42_read_state5 );
    sensitive << ( ap_predicate_op50_read_state6 );
    sensitive << ( ap_predicate_op58_read_state7 );
    sensitive << ( ap_predicate_op66_read_state8 );

    SC_METHOD(thread_grp_fu_165_p1);
    sensitive << ( axis01_TLAST );

    SC_METHOD(thread_p_Result_1_fu_184_p5);
    sensitive << ( p_Result_s_reg_390 );
    sensitive << ( tmp_data_V_1_reg_401 );

    SC_METHOD(thread_p_Result_2_7_fu_336_p9);
    sensitive << ( axis01_TKEEP );
    sensitive << ( tmp_keep_V_reg_374 );
    sensitive << ( tmp_keep_V_1_reg_407 );
    sensitive << ( tmp_keep_V_2_reg_439 );
    sensitive << ( tmp_keep_V_3_reg_470 );
    sensitive << ( tmp_keep_V_4_reg_500 );
    sensitive << ( tmp_keep_V_5_reg_529 );
    sensitive << ( tmp_keep_V_6_reg_555 );

    SC_METHOD(thread_p_Result_3_fu_225_p5);
    sensitive << ( p_Result_s_10_reg_453 );
    sensitive << ( tmp_data_V_3_reg_464 );

    SC_METHOD(thread_p_Result_4_fu_247_p5);
    sensitive << ( p_Result_3_reg_483 );
    sensitive << ( tmp_data_V_4_reg_494 );

    SC_METHOD(thread_p_Result_5_fu_270_p5);
    sensitive << ( p_Result_4_reg_512 );
    sensitive << ( tmp_data_V_5_reg_523 );

    SC_METHOD(thread_p_Result_6_fu_294_p5);
    sensitive << ( axis01_TDATA );
    sensitive << ( p_Result_5_fu_270_p5 );

    SC_METHOD(thread_p_Result_7_fu_322_p9);
    sensitive << ( axis01_TDATA );
    sensitive << ( tmp_data_V_reg_368 );
    sensitive << ( tmp_data_V_1_reg_401 );
    sensitive << ( tmp_data_V_2_reg_433 );
    sensitive << ( tmp_data_V_3_reg_464 );
    sensitive << ( tmp_data_V_4_reg_494 );
    sensitive << ( tmp_data_V_5_reg_523 );
    sensitive << ( tmp_data_V_6_reg_550 );

    SC_METHOD(thread_p_Result_s_10_fu_204_p5);
    sensitive << ( p_Result_1_reg_422 );
    sensitive << ( tmp_data_V_2_reg_433 );

    SC_METHOD(thread_p_Result_s_fu_170_p5);
    sensitive << ( tmp_data_V_reg_368 );
    sensitive << ( ap_port_reg_acc_data_V_read );

    SC_METHOD(thread_tmp_1_fu_214_p4);
    sensitive << ( tmp_keep_V_reg_374 );
    sensitive << ( tmp_keep_V_1_reg_407 );
    sensitive << ( tmp_keep_V_2_reg_439 );

    SC_METHOD(thread_tmp_2_fu_235_p5);
    sensitive << ( tmp_keep_V_reg_374 );
    sensitive << ( tmp_keep_V_1_reg_407 );
    sensitive << ( tmp_keep_V_2_reg_439 );
    sensitive << ( tmp_keep_V_3_reg_470 );

    SC_METHOD(thread_tmp_3_fu_257_p6);
    sensitive << ( tmp_keep_V_reg_374 );
    sensitive << ( tmp_keep_V_1_reg_407 );
    sensitive << ( tmp_keep_V_2_reg_439 );
    sensitive << ( tmp_keep_V_3_reg_470 );
    sensitive << ( tmp_keep_V_4_reg_500 );

    SC_METHOD(thread_tmp_4_fu_280_p7);
    sensitive << ( tmp_keep_V_reg_374 );
    sensitive << ( tmp_keep_V_1_reg_407 );
    sensitive << ( tmp_keep_V_2_reg_439 );
    sensitive << ( tmp_keep_V_3_reg_470 );
    sensitive << ( tmp_keep_V_4_reg_500 );
    sensitive << ( tmp_keep_V_5_reg_529 );

    SC_METHOD(thread_tmp_5_fu_306_p8);
    sensitive << ( axis01_TKEEP );
    sensitive << ( tmp_keep_V_reg_374 );
    sensitive << ( tmp_keep_V_1_reg_407 );
    sensitive << ( tmp_keep_V_2_reg_439 );
    sensitive << ( tmp_keep_V_3_reg_470 );
    sensitive << ( tmp_keep_V_4_reg_500 );
    sensitive << ( tmp_keep_V_5_reg_529 );

    SC_METHOD(thread_tmp_fu_194_p3);
    sensitive << ( tmp_keep_V_reg_374 );
    sensitive << ( tmp_keep_V_1_reg_407 );

    SC_METHOD(thread_zext_ln414_1_fu_200_p1);
    sensitive << ( tmp_fu_194_p3 );

    SC_METHOD(thread_zext_ln414_2_fu_221_p1);
    sensitive << ( tmp_1_fu_214_p4 );

    SC_METHOD(thread_zext_ln414_3_fu_243_p1);
    sensitive << ( tmp_2_fu_235_p5 );

    SC_METHOD(thread_zext_ln414_4_fu_266_p1);
    sensitive << ( tmp_3_fu_257_p6 );

    SC_METHOD(thread_zext_ln414_5_fu_290_p1);
    sensitive << ( tmp_4_fu_280_p7 );

    SC_METHOD(thread_zext_ln414_6_fu_318_p1);
    sensitive << ( tmp_5_fu_306_p8 );

    SC_METHOD(thread_zext_ln414_fu_181_p1);
    sensitive << ( tmp_keep_V_reg_374 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( axis01_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_last_V_reg_386 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_ce );
    sensitive << ( ap_predicate_op26_read_state3 );
    sensitive << ( ap_predicate_op34_read_state4 );
    sensitive << ( ap_predicate_op42_read_state5 );
    sensitive << ( ap_predicate_op50_read_state6 );
    sensitive << ( ap_predicate_op58_read_state7 );
    sensitive << ( ap_predicate_op66_read_state8 );

    ap_CS_fsm = "00000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "read_stream_32_256_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, axis01_TDATA, "(port)axis01_TDATA");
    sc_trace(mVcdFile, axis01_TVALID, "(port)axis01_TVALID");
    sc_trace(mVcdFile, axis01_TREADY, "(port)axis01_TREADY");
    sc_trace(mVcdFile, axis01_TKEEP, "(port)axis01_TKEEP");
    sc_trace(mVcdFile, axis01_TLAST, "(port)axis01_TLAST");
    sc_trace(mVcdFile, acc_data_V_read, "(port)acc_data_V_read");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
    sc_trace(mVcdFile, ap_return_2, "(port)ap_return_2");
    sc_trace(mVcdFile, axis01_TDATA_blk_n, "(port)axis01_TDATA_blk_n");
    sc_trace(mVcdFile, ap_ce, "(port)ap_ce");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_last_V_reg_386, "tmp_last_V_reg_386");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_last_V_1_reg_418, "tmp_last_V_1_reg_418");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_last_V_2_reg_449, "tmp_last_V_2_reg_449");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_last_V_3_reg_479, "tmp_last_V_3_reg_479");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_last_V_4_reg_508, "tmp_last_V_4_reg_508");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_last_V_5_reg_536, "tmp_last_V_5_reg_536");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_last_V_6_reg_560, "tmp_last_V_6_reg_560");
    sc_trace(mVcdFile, tmp_data_V_reg_368, "tmp_data_V_reg_368");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, tmp_keep_V_reg_374, "tmp_keep_V_reg_374");
    sc_trace(mVcdFile, grp_fu_165_p1, "grp_fu_165_p1");
    sc_trace(mVcdFile, p_Result_s_fu_170_p5, "p_Result_s_fu_170_p5");
    sc_trace(mVcdFile, p_Result_s_reg_390, "p_Result_s_reg_390");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, zext_ln414_fu_181_p1, "zext_ln414_fu_181_p1");
    sc_trace(mVcdFile, tmp_data_V_1_reg_401, "tmp_data_V_1_reg_401");
    sc_trace(mVcdFile, tmp_keep_V_1_reg_407, "tmp_keep_V_1_reg_407");
    sc_trace(mVcdFile, p_Result_1_fu_184_p5, "p_Result_1_fu_184_p5");
    sc_trace(mVcdFile, p_Result_1_reg_422, "p_Result_1_reg_422");
    sc_trace(mVcdFile, ap_predicate_op26_read_state3, "ap_predicate_op26_read_state3");
    sc_trace(mVcdFile, ap_block_state3, "ap_block_state3");
    sc_trace(mVcdFile, zext_ln414_1_fu_200_p1, "zext_ln414_1_fu_200_p1");
    sc_trace(mVcdFile, tmp_data_V_2_reg_433, "tmp_data_V_2_reg_433");
    sc_trace(mVcdFile, tmp_keep_V_2_reg_439, "tmp_keep_V_2_reg_439");
    sc_trace(mVcdFile, p_Result_s_10_fu_204_p5, "p_Result_s_10_fu_204_p5");
    sc_trace(mVcdFile, p_Result_s_10_reg_453, "p_Result_s_10_reg_453");
    sc_trace(mVcdFile, ap_predicate_op34_read_state4, "ap_predicate_op34_read_state4");
    sc_trace(mVcdFile, ap_block_state4, "ap_block_state4");
    sc_trace(mVcdFile, zext_ln414_2_fu_221_p1, "zext_ln414_2_fu_221_p1");
    sc_trace(mVcdFile, tmp_data_V_3_reg_464, "tmp_data_V_3_reg_464");
    sc_trace(mVcdFile, tmp_keep_V_3_reg_470, "tmp_keep_V_3_reg_470");
    sc_trace(mVcdFile, p_Result_3_fu_225_p5, "p_Result_3_fu_225_p5");
    sc_trace(mVcdFile, p_Result_3_reg_483, "p_Result_3_reg_483");
    sc_trace(mVcdFile, ap_predicate_op42_read_state5, "ap_predicate_op42_read_state5");
    sc_trace(mVcdFile, ap_block_state5, "ap_block_state5");
    sc_trace(mVcdFile, zext_ln414_3_fu_243_p1, "zext_ln414_3_fu_243_p1");
    sc_trace(mVcdFile, tmp_data_V_4_reg_494, "tmp_data_V_4_reg_494");
    sc_trace(mVcdFile, tmp_keep_V_4_reg_500, "tmp_keep_V_4_reg_500");
    sc_trace(mVcdFile, p_Result_4_fu_247_p5, "p_Result_4_fu_247_p5");
    sc_trace(mVcdFile, p_Result_4_reg_512, "p_Result_4_reg_512");
    sc_trace(mVcdFile, ap_predicate_op50_read_state6, "ap_predicate_op50_read_state6");
    sc_trace(mVcdFile, ap_block_state6, "ap_block_state6");
    sc_trace(mVcdFile, zext_ln414_4_fu_266_p1, "zext_ln414_4_fu_266_p1");
    sc_trace(mVcdFile, tmp_data_V_5_reg_523, "tmp_data_V_5_reg_523");
    sc_trace(mVcdFile, tmp_keep_V_5_reg_529, "tmp_keep_V_5_reg_529");
    sc_trace(mVcdFile, p_Result_5_fu_270_p5, "p_Result_5_fu_270_p5");
    sc_trace(mVcdFile, ap_predicate_op58_read_state7, "ap_predicate_op58_read_state7");
    sc_trace(mVcdFile, ap_block_state7, "ap_block_state7");
    sc_trace(mVcdFile, zext_ln414_5_fu_290_p1, "zext_ln414_5_fu_290_p1");
    sc_trace(mVcdFile, tmp_data_V_6_reg_550, "tmp_data_V_6_reg_550");
    sc_trace(mVcdFile, tmp_keep_V_6_reg_555, "tmp_keep_V_6_reg_555");
    sc_trace(mVcdFile, p_Result_6_fu_294_p5, "p_Result_6_fu_294_p5");
    sc_trace(mVcdFile, zext_ln414_6_fu_318_p1, "zext_ln414_6_fu_318_p1");
    sc_trace(mVcdFile, ap_port_reg_acc_data_V_read, "ap_port_reg_acc_data_V_read");
    sc_trace(mVcdFile, ap_phi_mux_acc_keep_V_1_phi_fu_89_p16, "ap_phi_mux_acc_keep_V_1_phi_fu_89_p16");
    sc_trace(mVcdFile, acc_keep_V_1_reg_86, "acc_keep_V_1_reg_86");
    sc_trace(mVcdFile, p_Result_2_7_fu_336_p9, "p_Result_2_7_fu_336_p9");
    sc_trace(mVcdFile, ap_predicate_op66_read_state8, "ap_predicate_op66_read_state8");
    sc_trace(mVcdFile, ap_block_state8, "ap_block_state8");
    sc_trace(mVcdFile, ap_phi_mux_acc_data_V_1_phi_fu_110_p16, "ap_phi_mux_acc_data_V_1_phi_fu_110_p16");
    sc_trace(mVcdFile, acc_data_V_1_reg_107, "acc_data_V_1_reg_107");
    sc_trace(mVcdFile, p_Result_7_fu_322_p9, "p_Result_7_fu_322_p9");
    sc_trace(mVcdFile, ap_phi_mux_acc_last_V_write_assign_phi_fu_132_p16, "ap_phi_mux_acc_last_V_write_assign_phi_fu_132_p16");
    sc_trace(mVcdFile, acc_last_V_write_assign_reg_128, "acc_last_V_write_assign_reg_128");
    sc_trace(mVcdFile, tmp_fu_194_p3, "tmp_fu_194_p3");
    sc_trace(mVcdFile, tmp_1_fu_214_p4, "tmp_1_fu_214_p4");
    sc_trace(mVcdFile, tmp_2_fu_235_p5, "tmp_2_fu_235_p5");
    sc_trace(mVcdFile, tmp_3_fu_257_p6, "tmp_3_fu_257_p6");
    sc_trace(mVcdFile, tmp_4_fu_280_p7, "tmp_4_fu_280_p7");
    sc_trace(mVcdFile, tmp_5_fu_306_p8, "tmp_5_fu_306_p8");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_condition_497, "ap_condition_497");
    sc_trace(mVcdFile, ap_condition_502, "ap_condition_502");
    sc_trace(mVcdFile, ap_condition_507, "ap_condition_507");
    sc_trace(mVcdFile, ap_condition_512, "ap_condition_512");
    sc_trace(mVcdFile, ap_condition_517, "ap_condition_517");
    sc_trace(mVcdFile, ap_condition_522, "ap_condition_522");
    sc_trace(mVcdFile, ap_condition_526, "ap_condition_526");
    sc_trace(mVcdFile, ap_condition_530, "ap_condition_530");
#endif

    }
}

read_stream_32_256_s::~read_stream_32_256_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void read_stream_32_256_s::thread_ap_clk_no_reset_() {
    if (esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1)) {
        if (esl_seteq<1,1,1>(ap_condition_530.read(), ap_const_boolean_1)) {
            acc_data_V_1_reg_107 = p_Result_7_fu_322_p9.read();
        } else if (esl_seteq<1,1,1>(ap_condition_526.read(), ap_const_boolean_1)) {
            acc_data_V_1_reg_107 = p_Result_6_fu_294_p5.read();
        } else if (esl_seteq<1,1,1>(ap_condition_522.read(), ap_const_boolean_1)) {
            acc_data_V_1_reg_107 = p_Result_5_fu_270_p5.read();
        } else if (esl_seteq<1,1,1>(ap_condition_517.read(), ap_const_boolean_1)) {
            acc_data_V_1_reg_107 = p_Result_4_fu_247_p5.read();
        } else if (esl_seteq<1,1,1>(ap_condition_512.read(), ap_const_boolean_1)) {
            acc_data_V_1_reg_107 = p_Result_3_fu_225_p5.read();
        } else if (esl_seteq<1,1,1>(ap_condition_507.read(), ap_const_boolean_1)) {
            acc_data_V_1_reg_107 = p_Result_s_10_fu_204_p5.read();
        } else if (esl_seteq<1,1,1>(ap_condition_502.read(), ap_const_boolean_1)) {
            acc_data_V_1_reg_107 = p_Result_1_fu_184_p5.read();
        } else if (esl_seteq<1,1,1>(ap_condition_497.read(), ap_const_boolean_1)) {
            acc_data_V_1_reg_107 = p_Result_s_fu_170_p5.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1)) {
        if (esl_seteq<1,1,1>(ap_condition_530.read(), ap_const_boolean_1)) {
            acc_keep_V_1_reg_86 = p_Result_2_7_fu_336_p9.read();
        } else if (esl_seteq<1,1,1>(ap_condition_526.read(), ap_const_boolean_1)) {
            acc_keep_V_1_reg_86 = zext_ln414_6_fu_318_p1.read();
        } else if (esl_seteq<1,1,1>(ap_condition_522.read(), ap_const_boolean_1)) {
            acc_keep_V_1_reg_86 = zext_ln414_5_fu_290_p1.read();
        } else if (esl_seteq<1,1,1>(ap_condition_517.read(), ap_const_boolean_1)) {
            acc_keep_V_1_reg_86 = zext_ln414_4_fu_266_p1.read();
        } else if (esl_seteq<1,1,1>(ap_condition_512.read(), ap_const_boolean_1)) {
            acc_keep_V_1_reg_86 = zext_ln414_3_fu_243_p1.read();
        } else if (esl_seteq<1,1,1>(ap_condition_507.read(), ap_const_boolean_1)) {
            acc_keep_V_1_reg_86 = zext_ln414_2_fu_221_p1.read();
        } else if (esl_seteq<1,1,1>(ap_condition_502.read(), ap_const_boolean_1)) {
            acc_keep_V_1_reg_86 = zext_ln414_1_fu_200_p1.read();
        } else if (esl_seteq<1,1,1>(ap_condition_497.read(), ap_const_boolean_1)) {
            acc_keep_V_1_reg_86 = zext_ln414_fu_181_p1.read();
        }
    }
    if ((esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_2_reg_449.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_3_reg_479.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_4_reg_508.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_5_reg_536.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_6_reg_560.read()) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op66_read_state8.read())))) {
        acc_last_V_write_assign_reg_128 = axis01_TLAST.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                 esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
                 !(esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read())) && 
                 esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                 esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op26_read_state3.read())) && 
                 esl_seteq<1,1,1>(tmp_last_V_1_reg_418.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                 esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op34_read_state4.read())) && 
                 esl_seteq<1,1,1>(tmp_last_V_2_reg_449.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_2_reg_449.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                 esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op42_read_state5.read())) && 
                 esl_seteq<1,1,1>(tmp_last_V_3_reg_479.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_2_reg_449.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_3_reg_479.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                 esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op50_read_state6.read())) && 
                 esl_seteq<1,1,1>(tmp_last_V_4_reg_508.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_2_reg_449.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_3_reg_479.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_4_reg_508.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                 esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op58_read_state7.read())) && 
                 esl_seteq<1,1,1>(tmp_last_V_5_reg_536.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_2_reg_449.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_3_reg_479.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_4_reg_508.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_5_reg_536.read()) && 
                 esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op58_read_state7.read())) && 
                 esl_seteq<1,1,1>(grp_fu_165_p1.read(), ap_const_lv1_1)))) {
        acc_last_V_write_assign_reg_128 = ap_const_lv1_1;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read())) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1))) {
        ap_port_reg_acc_data_V_read = acc_data_V_read.read();
        tmp_data_V_reg_368 = axis01_TDATA.read();
        tmp_keep_V_reg_374 = axis01_TKEEP.read();
        tmp_last_V_reg_386 = axis01_TLAST.read();
    }
    if ((esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op26_read_state3.read())))) {
        p_Result_1_reg_422 = p_Result_1_fu_184_p5.read();
    }
    if ((esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_2_reg_449.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op42_read_state5.read())))) {
        p_Result_3_reg_483 = p_Result_3_fu_225_p5.read();
    }
    if ((esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_2_reg_449.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_3_reg_479.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op50_read_state6.read())))) {
        p_Result_4_reg_512 = p_Result_4_fu_247_p5.read();
    }
    if ((esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op34_read_state4.read())))) {
        p_Result_s_10_reg_453 = p_Result_s_10_fu_204_p5.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && !(esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read())))) {
        p_Result_s_reg_390 = p_Result_s_fu_170_p5.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && !(esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read())))) {
        tmp_data_V_1_reg_401 = axis01_TDATA.read();
        tmp_keep_V_1_reg_407 = axis01_TKEEP.read();
        tmp_last_V_1_reg_418 = axis01_TLAST.read();
    }
    if ((esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op26_read_state3.read())))) {
        tmp_data_V_2_reg_433 = axis01_TDATA.read();
        tmp_keep_V_2_reg_439 = axis01_TKEEP.read();
        tmp_last_V_2_reg_449 = axis01_TLAST.read();
    }
    if ((esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_2_reg_449.read()) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op34_read_state4.read())))) {
        tmp_data_V_3_reg_464 = axis01_TDATA.read();
        tmp_keep_V_3_reg_470 = axis01_TKEEP.read();
        tmp_last_V_3_reg_479 = axis01_TLAST.read();
    }
    if ((esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_2_reg_449.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_3_reg_479.read()) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op42_read_state5.read())))) {
        tmp_data_V_4_reg_494 = axis01_TDATA.read();
        tmp_keep_V_4_reg_500 = axis01_TKEEP.read();
        tmp_last_V_4_reg_508 = axis01_TLAST.read();
    }
    if ((esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_2_reg_449.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_3_reg_479.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_4_reg_508.read()) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op50_read_state6.read())))) {
        tmp_data_V_5_reg_523 = axis01_TDATA.read();
        tmp_keep_V_5_reg_529 = axis01_TKEEP.read();
        tmp_last_V_5_reg_536 = axis01_TLAST.read();
    }
    if ((esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_2_reg_449.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_3_reg_479.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_4_reg_508.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_5_reg_536.read()) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op58_read_state7.read())))) {
        tmp_data_V_6_reg_550 = axis01_TDATA.read();
        tmp_keep_V_6_reg_555 = axis01_TKEEP.read();
        tmp_last_V_6_reg_560 = axis01_TLAST.read();
    }
}

void read_stream_32_256_s::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void read_stream_32_256_s::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void read_stream_32_256_s::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void read_stream_32_256_s::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void read_stream_32_256_s::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void read_stream_32_256_s::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void read_stream_32_256_s::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void read_stream_32_256_s::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void read_stream_32_256_s::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()));
}

void read_stream_32_256_s::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()));
}

void read_stream_32_256_s::thread_ap_block_state3() {
    ap_block_state3 = (esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op26_read_state3.read()));
}

void read_stream_32_256_s::thread_ap_block_state4() {
    ap_block_state4 = (esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op34_read_state4.read()));
}

void read_stream_32_256_s::thread_ap_block_state5() {
    ap_block_state5 = (esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op42_read_state5.read()));
}

void read_stream_32_256_s::thread_ap_block_state6() {
    ap_block_state6 = (esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op50_read_state6.read()));
}

void read_stream_32_256_s::thread_ap_block_state7() {
    ap_block_state7 = (esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op58_read_state7.read()));
}

void read_stream_32_256_s::thread_ap_block_state8() {
    ap_block_state8 = (esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op66_read_state8.read()));
}

void read_stream_32_256_s::thread_ap_condition_497() {
    ap_condition_497 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read())) && esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_1));
}

void read_stream_32_256_s::thread_ap_condition_502() {
    ap_condition_502 = (esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op26_read_state3.read())) && esl_seteq<1,1,1>(tmp_last_V_1_reg_418.read(), ap_const_lv1_1));
}

void read_stream_32_256_s::thread_ap_condition_507() {
    ap_condition_507 = (esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op34_read_state4.read())) && esl_seteq<1,1,1>(tmp_last_V_2_reg_449.read(), ap_const_lv1_1));
}

void read_stream_32_256_s::thread_ap_condition_512() {
    ap_condition_512 = (esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_2_reg_449.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op42_read_state5.read())) && esl_seteq<1,1,1>(tmp_last_V_3_reg_479.read(), ap_const_lv1_1));
}

void read_stream_32_256_s::thread_ap_condition_517() {
    ap_condition_517 = (esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_2_reg_449.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_3_reg_479.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op50_read_state6.read())) && esl_seteq<1,1,1>(tmp_last_V_4_reg_508.read(), ap_const_lv1_1));
}

void read_stream_32_256_s::thread_ap_condition_522() {
    ap_condition_522 = (esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_2_reg_449.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_3_reg_479.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_4_reg_508.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op58_read_state7.read())) && esl_seteq<1,1,1>(tmp_last_V_5_reg_536.read(), ap_const_lv1_1));
}

void read_stream_32_256_s::thread_ap_condition_526() {
    ap_condition_526 = (esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_2_reg_449.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_3_reg_479.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_4_reg_508.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_5_reg_536.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op58_read_state7.read())) && esl_seteq<1,1,1>(grp_fu_165_p1.read(), ap_const_lv1_1));
}

void read_stream_32_256_s::thread_ap_condition_530() {
    ap_condition_530 = (esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_2_reg_449.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_3_reg_479.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_4_reg_508.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_5_reg_536.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_6_reg_560.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op66_read_state8.read())));
}

void read_stream_32_256_s::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op66_read_state8.read()))))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void read_stream_32_256_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void read_stream_32_256_s::thread_ap_phi_mux_acc_data_V_1_phi_fu_110_p16() {
    if ((esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_2_reg_449.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_3_reg_479.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_4_reg_508.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_5_reg_536.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_6_reg_560.read()))) {
        ap_phi_mux_acc_data_V_1_phi_fu_110_p16 = p_Result_7_fu_322_p9.read();
    } else {
        ap_phi_mux_acc_data_V_1_phi_fu_110_p16 = acc_data_V_1_reg_107.read();
    }
}

void read_stream_32_256_s::thread_ap_phi_mux_acc_keep_V_1_phi_fu_89_p16() {
    if ((esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_2_reg_449.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_3_reg_479.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_4_reg_508.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_5_reg_536.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_6_reg_560.read()))) {
        ap_phi_mux_acc_keep_V_1_phi_fu_89_p16 = p_Result_2_7_fu_336_p9.read();
    } else {
        ap_phi_mux_acc_keep_V_1_phi_fu_89_p16 = acc_keep_V_1_reg_86.read();
    }
}

void read_stream_32_256_s::thread_ap_phi_mux_acc_last_V_write_assign_phi_fu_132_p16() {
    if ((esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_2_reg_449.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_3_reg_479.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_4_reg_508.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_5_reg_536.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_6_reg_560.read()))) {
        ap_phi_mux_acc_last_V_write_assign_phi_fu_132_p16 = axis01_TLAST.read();
    } else {
        ap_phi_mux_acc_last_V_write_assign_phi_fu_132_p16 = acc_last_V_write_assign_reg_128.read();
    }
}

void read_stream_32_256_s::thread_ap_predicate_op26_read_state3() {
    ap_predicate_op26_read_state3 = (esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()));
}

void read_stream_32_256_s::thread_ap_predicate_op34_read_state4() {
    ap_predicate_op34_read_state4 = (esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_2_reg_449.read()));
}

void read_stream_32_256_s::thread_ap_predicate_op42_read_state5() {
    ap_predicate_op42_read_state5 = (esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_2_reg_449.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_3_reg_479.read()));
}

void read_stream_32_256_s::thread_ap_predicate_op50_read_state6() {
    ap_predicate_op50_read_state6 = (esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_2_reg_449.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_3_reg_479.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_4_reg_508.read()));
}

void read_stream_32_256_s::thread_ap_predicate_op58_read_state7() {
    ap_predicate_op58_read_state7 = (esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_2_reg_449.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_3_reg_479.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_4_reg_508.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_5_reg_536.read()));
}

void read_stream_32_256_s::thread_ap_predicate_op66_read_state8() {
    ap_predicate_op66_read_state8 = (esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_2_reg_449.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_3_reg_479.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_4_reg_508.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_5_reg_536.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_6_reg_560.read()));
}

void read_stream_32_256_s::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op66_read_state8.read())))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void read_stream_32_256_s::thread_ap_return_0() {
    ap_return_0 = ap_phi_mux_acc_data_V_1_phi_fu_110_p16.read();
}

void read_stream_32_256_s::thread_ap_return_1() {
    ap_return_1 = ap_phi_mux_acc_keep_V_1_phi_fu_89_p16.read();
}

void read_stream_32_256_s::thread_ap_return_2() {
    ap_return_2 = ap_phi_mux_acc_last_V_write_assign_phi_fu_132_p16.read();
}

void read_stream_32_256_s::thread_axis01_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read())) || 
         (esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_2_reg_449.read())) || 
         (esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_2_reg_449.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_3_reg_479.read())) || 
         (esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_2_reg_449.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_3_reg_479.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_4_reg_508.read())) || 
         (esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_2_reg_449.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_3_reg_479.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_4_reg_508.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_5_reg_536.read())) || 
         (esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_1_reg_418.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_2_reg_449.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_3_reg_479.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_4_reg_508.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_5_reg_536.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_last_V_6_reg_560.read())))) {
        axis01_TDATA_blk_n = axis01_TVALID.read();
    } else {
        axis01_TDATA_blk_n = ap_const_logic_1;
    }
}

void read_stream_32_256_s::thread_axis01_TREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read())) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          !(esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op26_read_state3.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op26_read_state3.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op34_read_state4.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op34_read_state4.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op42_read_state5.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op42_read_state5.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op50_read_state6.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op50_read_state6.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op58_read_state7.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op58_read_state7.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op66_read_state8.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op66_read_state8.read()))))) {
        axis01_TREADY = ap_const_logic_1;
    } else {
        axis01_TREADY = ap_const_logic_0;
    }
}

void read_stream_32_256_s::thread_grp_fu_165_p1() {
    grp_fu_165_p1 = axis01_TLAST.read();
}

void read_stream_32_256_s::thread_p_Result_1_fu_184_p5() {
    p_Result_1_fu_184_p5 = esl_partset<256,256,32,32,32>(p_Result_s_reg_390.read(), tmp_data_V_1_reg_401.read(), ap_const_lv32_20, ap_const_lv32_3F);
}

void read_stream_32_256_s::thread_p_Result_2_7_fu_336_p9() {
    p_Result_2_7_fu_336_p9 = esl_concat<28,4>(esl_concat<24,4>(esl_concat<20,4>(esl_concat<16,4>(esl_concat<12,4>(esl_concat<8,4>(esl_concat<4,4>(axis01_TKEEP.read(), tmp_keep_V_6_reg_555.read()), tmp_keep_V_5_reg_529.read()), tmp_keep_V_4_reg_500.read()), tmp_keep_V_3_reg_470.read()), tmp_keep_V_2_reg_439.read()), tmp_keep_V_1_reg_407.read()), tmp_keep_V_reg_374.read());
}

void read_stream_32_256_s::thread_p_Result_3_fu_225_p5() {
    p_Result_3_fu_225_p5 = esl_partset<256,256,32,32,32>(p_Result_s_10_reg_453.read(), tmp_data_V_3_reg_464.read(), ap_const_lv32_60, ap_const_lv32_7F);
}

void read_stream_32_256_s::thread_p_Result_4_fu_247_p5() {
    p_Result_4_fu_247_p5 = esl_partset<256,256,32,32,32>(p_Result_3_reg_483.read(), tmp_data_V_4_reg_494.read(), ap_const_lv32_80, ap_const_lv32_9F);
}

void read_stream_32_256_s::thread_p_Result_5_fu_270_p5() {
    p_Result_5_fu_270_p5 = esl_partset<256,256,32,32,32>(p_Result_4_reg_512.read(), tmp_data_V_5_reg_523.read(), ap_const_lv32_A0, ap_const_lv32_BF);
}

void read_stream_32_256_s::thread_p_Result_6_fu_294_p5() {
    p_Result_6_fu_294_p5 = esl_partset<256,256,32,32,32>(p_Result_5_fu_270_p5.read(), axis01_TDATA.read(), ap_const_lv32_C0, ap_const_lv32_DF);
}

void read_stream_32_256_s::thread_p_Result_7_fu_322_p9() {
    p_Result_7_fu_322_p9 = esl_concat<224,32>(esl_concat<192,32>(esl_concat<160,32>(esl_concat<128,32>(esl_concat<96,32>(esl_concat<64,32>(esl_concat<32,32>(axis01_TDATA.read(), tmp_data_V_6_reg_550.read()), tmp_data_V_5_reg_523.read()), tmp_data_V_4_reg_494.read()), tmp_data_V_3_reg_464.read()), tmp_data_V_2_reg_433.read()), tmp_data_V_1_reg_401.read()), tmp_data_V_reg_368.read());
}

void read_stream_32_256_s::thread_p_Result_s_10_fu_204_p5() {
    p_Result_s_10_fu_204_p5 = esl_partset<256,256,32,32,32>(p_Result_1_reg_422.read(), tmp_data_V_2_reg_433.read(), ap_const_lv32_40, ap_const_lv32_5F);
}

void read_stream_32_256_s::thread_p_Result_s_fu_170_p5() {
    p_Result_s_fu_170_p5 = esl_partset<256,256,32,32,32>(ap_port_reg_acc_data_V_read.read(), tmp_data_V_reg_368.read(), ap_const_lv32_0, ap_const_lv32_1F);
}

void read_stream_32_256_s::thread_tmp_1_fu_214_p4() {
    tmp_1_fu_214_p4 = esl_concat<8,4>(esl_concat<4,4>(tmp_keep_V_2_reg_439.read(), tmp_keep_V_1_reg_407.read()), tmp_keep_V_reg_374.read());
}

void read_stream_32_256_s::thread_tmp_2_fu_235_p5() {
    tmp_2_fu_235_p5 = esl_concat<12,4>(esl_concat<8,4>(esl_concat<4,4>(tmp_keep_V_3_reg_470.read(), tmp_keep_V_2_reg_439.read()), tmp_keep_V_1_reg_407.read()), tmp_keep_V_reg_374.read());
}

void read_stream_32_256_s::thread_tmp_3_fu_257_p6() {
    tmp_3_fu_257_p6 = esl_concat<16,4>(esl_concat<12,4>(esl_concat<8,4>(esl_concat<4,4>(tmp_keep_V_4_reg_500.read(), tmp_keep_V_3_reg_470.read()), tmp_keep_V_2_reg_439.read()), tmp_keep_V_1_reg_407.read()), tmp_keep_V_reg_374.read());
}

void read_stream_32_256_s::thread_tmp_4_fu_280_p7() {
    tmp_4_fu_280_p7 = esl_concat<20,4>(esl_concat<16,4>(esl_concat<12,4>(esl_concat<8,4>(esl_concat<4,4>(tmp_keep_V_5_reg_529.read(), tmp_keep_V_4_reg_500.read()), tmp_keep_V_3_reg_470.read()), tmp_keep_V_2_reg_439.read()), tmp_keep_V_1_reg_407.read()), tmp_keep_V_reg_374.read());
}

void read_stream_32_256_s::thread_tmp_5_fu_306_p8() {
    tmp_5_fu_306_p8 = esl_concat<24,4>(esl_concat<20,4>(esl_concat<16,4>(esl_concat<12,4>(esl_concat<8,4>(esl_concat<4,4>(axis01_TKEEP.read(), tmp_keep_V_5_reg_529.read()), tmp_keep_V_4_reg_500.read()), tmp_keep_V_3_reg_470.read()), tmp_keep_V_2_reg_439.read()), tmp_keep_V_1_reg_407.read()), tmp_keep_V_reg_374.read());
}

void read_stream_32_256_s::thread_tmp_fu_194_p3() {
    tmp_fu_194_p3 = esl_concat<4,4>(tmp_keep_V_1_reg_407.read(), tmp_keep_V_reg_374.read());
}

void read_stream_32_256_s::thread_zext_ln414_1_fu_200_p1() {
    zext_ln414_1_fu_200_p1 = esl_zext<32,8>(tmp_fu_194_p3.read());
}

void read_stream_32_256_s::thread_zext_ln414_2_fu_221_p1() {
    zext_ln414_2_fu_221_p1 = esl_zext<32,12>(tmp_1_fu_214_p4.read());
}

void read_stream_32_256_s::thread_zext_ln414_3_fu_243_p1() {
    zext_ln414_3_fu_243_p1 = esl_zext<32,16>(tmp_2_fu_235_p5.read());
}

void read_stream_32_256_s::thread_zext_ln414_4_fu_266_p1() {
    zext_ln414_4_fu_266_p1 = esl_zext<32,20>(tmp_3_fu_257_p6.read());
}

void read_stream_32_256_s::thread_zext_ln414_5_fu_290_p1() {
    zext_ln414_5_fu_290_p1 = esl_zext<32,24>(tmp_4_fu_280_p7.read());
}

void read_stream_32_256_s::thread_zext_ln414_6_fu_318_p1() {
    zext_ln414_6_fu_318_p1 = esl_zext<32,28>(tmp_5_fu_306_p8.read());
}

void read_stream_32_256_s::thread_zext_ln414_fu_181_p1() {
    zext_ln414_fu_181_p1 = esl_zext<32,4>(tmp_keep_V_reg_374.read());
}

void read_stream_32_256_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read())) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && !(esl_seteq<1,1,1>(tmp_last_V_reg_386.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read())))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op26_read_state3.read())))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op34_read_state4.read())))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op42_read_state5.read())))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op50_read_state6.read())))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op58_read_state7.read())))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && !(esl_seteq<1,1,1>(ap_const_logic_0, axis01_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op66_read_state8.read())))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXXXX";
            break;
    }
}

}

