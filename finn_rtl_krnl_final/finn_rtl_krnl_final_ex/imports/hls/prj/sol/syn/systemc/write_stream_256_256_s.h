// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _write_stream_256_256_s_HH_
#define _write_stream_256_256_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct write_stream_256_256_s : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<256> > acc_data_V_read;
    sc_in< sc_lv<32> > acc_keep_V_read;
    sc_in< sc_lv<1> > acc_last_V_read;
    sc_out< sc_lv<256> > axis00_TDATA;
    sc_out< sc_logic > axis00_TVALID;
    sc_in< sc_logic > axis00_TREADY;
    sc_out< sc_lv<32> > axis00_TKEEP;
    sc_out< sc_lv<1> > axis00_TLAST;
    sc_out< sc_logic > axis00_TDATA_blk_n;
    sc_in< sc_logic > ap_ce;


    // Module declarations
    write_stream_256_256_s(sc_module_name name);
    SC_HAS_PROCESS(write_stream_256_256_s);

    ~write_stream_256_256_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_state1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_axis00_TDATA();
    void thread_axis00_TDATA_blk_n();
    void thread_axis00_TKEEP();
    void thread_axis00_TLAST();
    void thread_axis00_TVALID();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
